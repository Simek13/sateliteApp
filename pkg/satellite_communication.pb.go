// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: satellite_communication.proto

package satellitecommunication

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SatelliteFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SatId int32 `protobuf:"varint,1,opt,name=satId,proto3" json:"satId,omitempty"`
}

func (x *SatelliteFilter) Reset() {
	*x = SatelliteFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satellite_communication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SatelliteFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SatelliteFilter) ProtoMessage() {}

func (x *SatelliteFilter) ProtoReflect() protoreflect.Message {
	mi := &file_satellite_communication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SatelliteFilter.ProtoReflect.Descriptor instead.
func (*SatelliteFilter) Descriptor() ([]byte, []int) {
	return file_satellite_communication_proto_rawDescGZIP(), []int{0}
}

func (x *SatelliteFilter) GetSatId() int32 {
	if x != nil {
		return x.SatId
	}
	return 0
}

type Measurement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FileName            string  `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	IdSat               int32   `protobuf:"varint,3,opt,name=idSat,proto3" json:"idSat,omitempty"`
	Timestamp           string  `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IonoIndex           float32 `protobuf:"fixed32,5,opt,name=ionoIndex,proto3" json:"ionoIndex,omitempty"`
	NdviIndex           float32 `protobuf:"fixed32,6,opt,name=ndviIndex,proto3" json:"ndviIndex,omitempty"`
	RadiationIndex      float32 `protobuf:"fixed32,7,opt,name=radiationIndex,proto3" json:"radiationIndex,omitempty"`
	SpecificMeasurement string  `protobuf:"bytes,8,opt,name=specificMeasurement,proto3" json:"specificMeasurement,omitempty"`
}

func (x *Measurement) Reset() {
	*x = Measurement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satellite_communication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Measurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Measurement) ProtoMessage() {}

func (x *Measurement) ProtoReflect() protoreflect.Message {
	mi := &file_satellite_communication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Measurement.ProtoReflect.Descriptor instead.
func (*Measurement) Descriptor() ([]byte, []int) {
	return file_satellite_communication_proto_rawDescGZIP(), []int{1}
}

func (x *Measurement) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Measurement) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Measurement) GetIdSat() int32 {
	if x != nil {
		return x.IdSat
	}
	return 0
}

func (x *Measurement) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Measurement) GetIonoIndex() float32 {
	if x != nil {
		return x.IonoIndex
	}
	return 0
}

func (x *Measurement) GetNdviIndex() float32 {
	if x != nil {
		return x.NdviIndex
	}
	return 0
}

func (x *Measurement) GetRadiationIndex() float32 {
	if x != nil {
		return x.RadiationIndex
	}
	return 0
}

func (x *Measurement) GetSpecificMeasurement() string {
	if x != nil {
		return x.SpecificMeasurement
	}
	return ""
}

type Computation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IdSat    int32   `protobuf:"varint,2,opt,name=idSat,proto3" json:"idSat,omitempty"`
	Duration string  `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	MaxIono  float32 `protobuf:"fixed32,4,opt,name=maxIono,proto3" json:"maxIono,omitempty"`
	MinIono  float32 `protobuf:"fixed32,5,opt,name=minIono,proto3" json:"minIono,omitempty"`
	AvgIono  float32 `protobuf:"fixed32,6,opt,name=avgIono,proto3" json:"avgIono,omitempty"`
	MaxNdvi  float32 `protobuf:"fixed32,7,opt,name=maxNdvi,proto3" json:"maxNdvi,omitempty"`
	MinNdvi  float32 `protobuf:"fixed32,8,opt,name=minNdvi,proto3" json:"minNdvi,omitempty"`
	AvgNdvi  float32 `protobuf:"fixed32,9,opt,name=avgNdvi,proto3" json:"avgNdvi,omitempty"`
	MaxRad   float32 `protobuf:"fixed32,10,opt,name=maxRad,proto3" json:"maxRad,omitempty"`
	MinRad   float32 `protobuf:"fixed32,11,opt,name=minRad,proto3" json:"minRad,omitempty"`
	AvgRad   float32 `protobuf:"fixed32,12,opt,name=avgRad,proto3" json:"avgRad,omitempty"`
	MaxSpec  float32 `protobuf:"fixed32,13,opt,name=maxSpec,proto3" json:"maxSpec,omitempty"`
	MinSpec  float32 `protobuf:"fixed32,14,opt,name=minSpec,proto3" json:"minSpec,omitempty"`
	AvgSpec  float32 `protobuf:"fixed32,15,opt,name=avgSpec,proto3" json:"avgSpec,omitempty"`
}

func (x *Computation) Reset() {
	*x = Computation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satellite_communication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Computation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Computation) ProtoMessage() {}

func (x *Computation) ProtoReflect() protoreflect.Message {
	mi := &file_satellite_communication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Computation.ProtoReflect.Descriptor instead.
func (*Computation) Descriptor() ([]byte, []int) {
	return file_satellite_communication_proto_rawDescGZIP(), []int{2}
}

func (x *Computation) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Computation) GetIdSat() int32 {
	if x != nil {
		return x.IdSat
	}
	return 0
}

func (x *Computation) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Computation) GetMaxIono() float32 {
	if x != nil {
		return x.MaxIono
	}
	return 0
}

func (x *Computation) GetMinIono() float32 {
	if x != nil {
		return x.MinIono
	}
	return 0
}

func (x *Computation) GetAvgIono() float32 {
	if x != nil {
		return x.AvgIono
	}
	return 0
}

func (x *Computation) GetMaxNdvi() float32 {
	if x != nil {
		return x.MaxNdvi
	}
	return 0
}

func (x *Computation) GetMinNdvi() float32 {
	if x != nil {
		return x.MinNdvi
	}
	return 0
}

func (x *Computation) GetAvgNdvi() float32 {
	if x != nil {
		return x.AvgNdvi
	}
	return 0
}

func (x *Computation) GetMaxRad() float32 {
	if x != nil {
		return x.MaxRad
	}
	return 0
}

func (x *Computation) GetMinRad() float32 {
	if x != nil {
		return x.MinRad
	}
	return 0
}

func (x *Computation) GetAvgRad() float32 {
	if x != nil {
		return x.AvgRad
	}
	return 0
}

func (x *Computation) GetMaxSpec() float32 {
	if x != nil {
		return x.MaxSpec
	}
	return 0
}

func (x *Computation) GetMinSpec() float32 {
	if x != nil {
		return x.MinSpec
	}
	return 0
}

func (x *Computation) GetAvgSpec() float32 {
	if x != nil {
		return x.AvgSpec
	}
	return 0
}

type MeasurementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measurements []*Measurement `protobuf:"bytes,1,rep,name=measurements,proto3" json:"measurements,omitempty"`
}

func (x *MeasurementResponse) Reset() {
	*x = MeasurementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satellite_communication_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementResponse) ProtoMessage() {}

func (x *MeasurementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satellite_communication_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementResponse.ProtoReflect.Descriptor instead.
func (*MeasurementResponse) Descriptor() ([]byte, []int) {
	return file_satellite_communication_proto_rawDescGZIP(), []int{3}
}

func (x *MeasurementResponse) GetMeasurements() []*Measurement {
	if x != nil {
		return x.Measurements
	}
	return nil
}

type ComputationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Computations []*Computation `protobuf:"bytes,1,rep,name=computations,proto3" json:"computations,omitempty"`
}

func (x *ComputationResponse) Reset() {
	*x = ComputationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satellite_communication_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputationResponse) ProtoMessage() {}

func (x *ComputationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satellite_communication_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputationResponse.ProtoReflect.Descriptor instead.
func (*ComputationResponse) Descriptor() ([]byte, []int) {
	return file_satellite_communication_proto_rawDescGZIP(), []int{4}
}

func (x *ComputationResponse) GetComputations() []*Computation {
	if x != nil {
		return x.Computations
	}
	return nil
}

var File_satellite_communication_proto protoreflect.FileDescriptor

var file_satellite_communication_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x0f, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x61, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x61, 0x74, 0x49, 0x64, 0x22, 0x83,
	0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x64,
	0x53, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x64, 0x53, 0x61, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6f, 0x6e, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x69, 0x6f, 0x6e, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x64, 0x76, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x6e, 0x64, 0x76, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x61,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0e, 0x72, 0x61, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x81, 0x03, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x64, 0x53, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x64, 0x53, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x49, 0x6f, 0x6e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x49, 0x6f, 0x6e, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x49, 0x6f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x49, 0x6f, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76,
	0x67, 0x49, 0x6f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x67,
	0x49, 0x6f, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x4e, 0x64, 0x76, 0x69, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x4e, 0x64, 0x76, 0x69, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x4e, 0x64, 0x76, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x6d, 0x69, 0x6e, 0x4e, 0x64, 0x76, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x67, 0x4e,
	0x64, 0x76, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x67, 0x4e, 0x64,
	0x76, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69,
	0x6e, 0x52, 0x61, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x52,
	0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x67, 0x52, 0x61, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x61, 0x76, 0x67, 0x52, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61,
	0x78, 0x53, 0x70, 0x65, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x76, 0x67, 0x53, 0x70, 0x65, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x61, 0x76, 0x67, 0x53, 0x70, 0x65, 0x63, 0x22, 0x5e, 0x0a, 0x13, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x5e, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xaa, 0x02, 0x0a, 0x16, 0x53, 0x61, 0x74,
	0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x86, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c,
	0x69, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x1a, 0x2b, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x61, 0x74, 0x49, 0x64, 0x7d, 0x12, 0x86, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x27, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c,
	0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x2b, 0x2e, 0x73, 0x61, 0x74, 0x65,
	0x6c, 0x6c, 0x69, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15,
	0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x73,
	0x61, 0x74, 0x49, 0x64, 0x7d, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x69, 0x6d, 0x65, 0x6b, 0x31, 0x33, 0x2f, 0x73, 0x61, 0x74, 0x65,
	0x6c, 0x6c, 0x69, 0x74, 0x65, 0x41, 0x70, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_satellite_communication_proto_rawDescOnce sync.Once
	file_satellite_communication_proto_rawDescData = file_satellite_communication_proto_rawDesc
)

func file_satellite_communication_proto_rawDescGZIP() []byte {
	file_satellite_communication_proto_rawDescOnce.Do(func() {
		file_satellite_communication_proto_rawDescData = protoimpl.X.CompressGZIP(file_satellite_communication_proto_rawDescData)
	})
	return file_satellite_communication_proto_rawDescData
}

var file_satellite_communication_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_satellite_communication_proto_goTypes = []interface{}{
	(*SatelliteFilter)(nil),     // 0: satellitecommunication.SatelliteFilter
	(*Measurement)(nil),         // 1: satellitecommunication.Measurement
	(*Computation)(nil),         // 2: satellitecommunication.Computation
	(*MeasurementResponse)(nil), // 3: satellitecommunication.MeasurementResponse
	(*ComputationResponse)(nil), // 4: satellitecommunication.ComputationResponse
}
var file_satellite_communication_proto_depIdxs = []int32{
	1, // 0: satellitecommunication.MeasurementResponse.measurements:type_name -> satellitecommunication.Measurement
	2, // 1: satellitecommunication.ComputationResponse.computations:type_name -> satellitecommunication.Computation
	0, // 2: satellitecommunication.SatelliteCommunication.GetMeasurements:input_type -> satellitecommunication.SatelliteFilter
	0, // 3: satellitecommunication.SatelliteCommunication.GetComputations:input_type -> satellitecommunication.SatelliteFilter
	3, // 4: satellitecommunication.SatelliteCommunication.GetMeasurements:output_type -> satellitecommunication.MeasurementResponse
	4, // 5: satellitecommunication.SatelliteCommunication.GetComputations:output_type -> satellitecommunication.ComputationResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_satellite_communication_proto_init() }
func file_satellite_communication_proto_init() {
	if File_satellite_communication_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_satellite_communication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SatelliteFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satellite_communication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Measurement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satellite_communication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Computation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satellite_communication_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satellite_communication_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_satellite_communication_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_satellite_communication_proto_goTypes,
		DependencyIndexes: file_satellite_communication_proto_depIdxs,
		MessageInfos:      file_satellite_communication_proto_msgTypes,
	}.Build()
	File_satellite_communication_proto = out.File
	file_satellite_communication_proto_rawDesc = nil
	file_satellite_communication_proto_goTypes = nil
	file_satellite_communication_proto_depIdxs = nil
}
